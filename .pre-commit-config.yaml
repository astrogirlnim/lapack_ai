# LAPACK AI Modernization - Pre-commit Configuration
# Comprehensive code quality and formatting hooks for multi-language codebase

repos:
  # Fortran code formatting with fprettify (conservative settings for legacy code)
  - repo: https://github.com/fortran-lang/fprettify
    rev: v0.3.7  # Use the latest stable version
    hooks:
      - id: fprettify
        name: 'Format Fortran code with fprettify (conservative)'
        description: 'Conservative formatting for legacy Fortran code'
        files: \.(f|f90|f95|f03|f08|F|F90|F95|F03|F08)$
        exclude: |
          (?x)^(
            .*/DEPRECATED/.*|
            .*/build/.*|
            .*/CMakeFiles/.*|
            .*\.mod$
          )$
        args:
          - --indent=2              # 2-space indentation
          - --line-length=132       # Modern Fortran line length
          - --whitespace=1          # Conservative whitespace handling
          - --disable-fypp          # Disable fypp preprocessing
          - --disable-indent-mod    # Disable module indentation changes
        language: python
        additional_dependencies: [fprettify>=0.3.7]
        # Make fprettify non-blocking for legacy code issues
        verbose: true

  # Python code quality and formatting
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        name: 'Format Python code with Black'
        language_version: python3.11
        args: [--line-length=88]

  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: 'Sort Python imports with isort'
        args: [--profile=black, --line-length=88]

  - repo: https://github.com/PyCQA/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        name: 'Lint Python code with flake8'
        args: [--max-line-length=88, --extend-ignore=E203,W503]
        additional_dependencies: [flake8-docstrings, flake8-type-checking]

  # General file quality checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        name: 'Remove trailing whitespace'
        exclude: \.(md|rst)$  # Preserve markdown trailing spaces

      - id: end-of-file-fixer
        name: 'Ensure files end with newline'
        exclude: \.(png|jpg|jpeg|gif|ico|svg)$

      - id: check-yaml
        name: 'Validate YAML files'
        files: \.(yaml|yml)$

      - id: check-json
        name: 'Validate JSON files'
        files: \.json$

      - id: check-toml
        name: 'Validate TOML files'
        files: \.toml$

      - id: check-xml
        name: 'Validate XML files'
        files: \.xml$

      - id: check-merge-conflict
        name: 'Check for merge conflict markers'

      - id: check-case-conflict
        name: 'Check for case conflicts (Windows compatibility)'

      - id: check-added-large-files
        name: 'Prevent large files from being committed'
        args: [--maxkb=10240]  # 10MB limit

      - id: mixed-line-ending
        name: 'Fix mixed line endings'
        args: [--fix=lf]  # Enforce LF line endings

  # CMake formatting for better build script consistency
  - repo: https://github.com/cheshirekow/cmake-format-precommit
    rev: v0.6.13
    hooks:
      - id: cmake-format
        name: 'Format CMake files'
        files: (CMakeLists\.txt|\.cmake)$
        args: [--line-width=100, --tab-size=2]

  # Security and secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        name: 'Detect hardcoded secrets'
        exclude: \.(lock|min\.js|jpg|png|gif|ico|svg)$

  # Docker file linting (allow warnings for legacy compatibility)
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: 'Lint Dockerfiles'
        files: Dockerfile.*$
        args: [--ignore, DL3008, --ignore, DL3013, --ignore, DL3059, --ignore, SC3009]

# Pre-commit CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [hadolint-docker]  # Skip Docker linting in CI (requires Docker)
  submodules: false

# Default settings for all hooks
default_language_version:
  python: python3.11

# Exclude patterns for files that shouldn't be processed
exclude: |
  (?x)^(
    # Build artifacts and generated files
    build/.*|
    dist/.*|
    \.git/.*|
    __pycache__/.*|
    \.pytest_cache/.*|
    \.venv/.*|
    venv/.*|

    # Documentation builds
    docs/_build/.*|

    # Large data files and binaries
    .*\.(png|jpg|jpeg|gif|ico|svg|pdf|zip|tar|gz|bz2|7z)$|

    # Test output and temporary files
    .*\.tmp$|
    .*\.log$|
    testing_results\.txt|

    # LAPACK specific generated files
    .*\.mod$|
    .*\.o$|
    .*\.a$|
    .*\.so.*$|

    # Memory bank and documentation (not code)
    MODERNIZATION/memory_bank/.*|
    MODERNIZATION/BRAINLIFT/.*|
    DOCS/.*
  )$
